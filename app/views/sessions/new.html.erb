<% provide(:title, "Sign in") %>
<h1 class="header-middle">Sign in</h1>

<div class="sign-in">
  <div>
    <%= form_for(:session, url: sessions_path, :html => {:id => "validate-login"}) do |f| %>

      <%= f.label :email %>
      <%= f.text_field :email %><br />

      <%= f.label :password %>
      <%= f.password_field :password %>
<br />
      <%= f.submit "Sign in", class: "btn btn-large btn-primary" %>
    <% end %>

    <p>New user? <%= link_to "Sign up now!", signup_path %></p>
  </div>
  <div id="fb-root"></div>
<h2>Updated JS SDK example</h2><br />
<div id="user-info"></div>
<p><div class="fb-login-button" data-show-faces="true" data-width="300" data-max-rows="1"></div>
<button id="fb-auth">Login</button></p>
</div>
</div>


<script>
  $("#validate-login").validate({
   rules: {
     "session[email]": {
       required: true,
       email: true
     },
     "session[password]": "required"
   },
   messages: {
     "session[email]": {
       required: "* Please provide your email address",
       email: "* Your email address must be in the format of name@domain.com"
     },
     "session[password]": "* Password is mandatory"
   }
})

window.fbAsyncInit = function() {
  FB.init({ appId: '424302414301211', 
        status: true, 
        cookie: true,
        xfbml: true,
        oauth: true});

  function updateButton(response) {
    var button = document.getElementById('fb-auth');
        
    if (response.authResponse) {
      //user is already logged in and connected
      var userInfo = document.getElementById('user-info');
      FB.api('/me', function(response) {
      console.log(response.location.name);
      
      });
      button.onclick = function() {
        FB.logout(function(response) {
          var userInfo = document.getElementById('user-info');
          userInfo.innerHTML="";
    });
      };
    } else {
      //user is not connected to your app or logged out
      button.innerHTML = 'Login';
      button.onclick = function() {
        FB.login(function(response) {
      if (response.authResponse) {
            FB.api('/me', function(response) {
          var userInfo = document.getElementById('user-info');
          $.ajax({
            type: "POST",
            url: "/fbconnect",
            data: {
                    name: response.name,
                    email: response.email,
                    fb_id: response.id
            },
            dataType: "json",
            success: function(e) {
                         window.location = "/products"
            }
          });
          //userInfo.innerHTML = 
            //    '<img src="https://graph.facebook.com/' 
            //+ response.id + '/picture" style="margin-right:5px"/>' 
            //+ response.name;
        });    
          } else {
            //user cancelled login or did not grant authorization
          }
        }, {scope:'email'});    
      }
    }
  }

  // run once with current status and whenever the status changes
  FB.getLoginStatus(updateButton);
  FB.Event.subscribe('auth.statusChange', updateButton);    
};
    
(function() {
  var e = document.createElement('script'); e.async = true;
  e.src = document.location.protocol 
    + '//connect.facebook.net/en_US/all.js';
  document.getElementById('fb-root').appendChild(e);
}());
</script>